package quickSort;

public class AboutQuickSort {
//퀵 정렬은 일반적으로 사용되고 있는 아주 빠른 정렬 알고리즘
	// 퀵 정렬의 개념
	//1. 피벗을 기준으로 키가 큰 사람과 작은 사람의 그룹으로 나눈다.
	//2. 피벗 설정과 그룹 나눔을 반복하여 모든 그룹이 1명이 되면 정렬을 마친다.
	
	//배열을 두 그룹으로 나누기
//	pl : 왼쪽 끝 요소
//	pr : 오른쪽 끝 요소
//	x: 피벗
	
//	1.a[pl] >=x 가 성립하는 요소를 찾을때까지 pl을 오른쪽으로 스캔합니다.
//	2.a[pr] <=x 가 성립하는 요소를 찾을 때까지 pr을 오른쪽으로 스캔합니다.
//	3. 그러면 두 조건이 성립하는 곳에서 멈추게 됩니다.
//	4. 교환을 수행합니다.
//	5. 계속 스캔을 진행하면 pl과 pr이 굧차합니다.
//	6. 그룹을 나누는 과정이 끝나고 배열은 아래처럼 두 그룹으로 나누어집니다.
//	7. 피벗 이하의 그룹 : a[0],...,a[pl-1]     피벗 이상의 그룹 : a[pr+1],...,a[n-1]
//	8. 또 그룹을 나누는 작업이 끝난 다음 pl>pr+1인 경우에는 다음과 같은 그룹이 생길 수 있습니다.
//	 피벗과 일치하는 값을 가지는 그룹 : a[pr+1],...,a[pl-1]
	
//	피벗과 pl-1, pr+1이겹치는때에도 교환을 한 번 수행해줘야 합니다. 아무리 많아봐야 1회이고  교환을 하지 않는다면, 
//	요소를 교환하기 전에 pl,pr이 동일한 요소인지 매번 검사해야 합니다.
	
	
}
